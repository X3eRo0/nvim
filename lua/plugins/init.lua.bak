local lazypath = vim.fn.stdpath("data") .. "/lazy/lazy.nvim"
if not vim.loop.fs_stat(lazypath) then
    vim.fn.system({
        "git",
        "clone",
        "--filter=blob:none",
        "https://github.com/folke/lazy.nvim.git",
        "--branch=stable", -- latest stable release
        lazypath,
    })
end
vim.opt.rtp:prepend(lazypath)

plugins = {
    "wbthomason/packer.nvim",
    {
        "nvim-treesitter/nvim-treesitter",
        run = ":TSUpdate",
        event = "BufWinEnter",
        config = "require('treesitter-config')",
    },
    "kyazdani42/nvim-web-devicons",
    "onsails/lspkind.nvim",
    {
        "j-hui/fidget.nvim",
        config = "require('fidget-config')",
    },
    {
        "windwp/nvim-ts-autotag",
        after = "nvim-treesitter",
    },
    {
        "p00f/nvim-ts-rainbow",
        after = "nvim-treesitter",
    },
    {
        "windwp/nvim-autopairs",
        config = "require('autopairs-config')",
        after = "nvim-cmp",
    },

    {
        "nvim-telescope/telescope.nvim",
        dependencies = { "nvim-lua/plenary.nvim" },
        cmd = "Telescope",
        config = "require('telescope-config')",
    },

    "hrsh7th/cmp-nvim-lsp",
    "hrsh7th/cmp-buffer",
    "hrsh7th/cmp-path",
    "hrsh7th/nvim-cmp",
    "hrsh7th/cmp-vsnip",
    "hrsh7th/vim-vsnip",
    "hrsh7th/vim-vsnip-integ",
    "rafamadriz/friendly-snippets",
    {
        "norcalli/nvim-colorizer.lua",
        config = "require('colorizer-config')",
        event = "BufRead",
    },
    {
        "lewis6991/gitsigns.nvim",
        config = "require('gitsigns-config')",
    },
    {
        "kylechui/nvim-surround",
        config = function()
            require("nvim-surround").setup()
        end,
    },
    {
        "numToStr/Comment.nvim",
        config = "require('comment-config')",
    },
    "monaqa/dial.nvim",
    {
        "lukas-reineke/indent-blankline.nvim",
        commit = "3ad57e569d1c47cf4fa2308f555003e0a5509204",
        config = "require('blankline-config')",
        event = "BufRead",
    },
    {
        "mhartington/formatter.nvim",
        config = "require('format-config')",
        cmd = "Format",
    },
    {
        "nvimdev/lspsaga.nvim",
        after = "nvim-lspconfig",
        config = "require('lsp/lspsaga')",
    },
    {
        "akinsho/toggleterm.nvim",
        config = "require('toggleterm-config')",
    },

    {
        "andweeb/presence.nvim",
        config = function()
            require("presence"):setup({
                -- General options
                auto_update = true,
                neovim_image_text = "The One True Text Editor",
                main_image = "neovim",
                client_id = "793271441293967371",
                log_level = nil,
                debounce_timeout = 10,
                enable_line_number = false,
                blacklist = {},
                buttons = true,
                -- Rich Presence text options
                editing_text = "Editing %s",
                file_explorer_text = "Browsing %s",
                git_commit_text = "Committing changes",
                plugin_manager_text = "Managing plugins",
                reading_text = "Reading %s",
                workspace_text = "Working on %s",
                line_number_text = "Line %s out of %s",
            })
        end,
    },

    "fedepujol/move.nvim",

    {
        "feline-nvim/feline.nvim",
        config = "require('feline-config')",
        dependencies = { "kyazdani42/nvim-web-devicons", opt = true },
    },

    "famiu/bufdelete.nvim",
    "williamboman/mason.nvim",
    "williamboman/mason-lspconfig.nvim",
    {
        "neovim/nvim-lspconfig",
        config = function()
	    require('lsp')
	end,
    },
    {
        "X3eRo0/dired.nvim",
        dependencies = "MunifTanjim/nui.nvim",
        config = "require('dired-config')",
    },
    "nvim-lua/plenary.nvim",
    {
        "TimUntersberger/neogit",
        dependencies = {
            "nvim-lua/plenary.nvim",
            "sindrets/diffview.nvim",
        },
        config = "require('neogit-config')",
    },
    {
        "SmiteshP/nvim-navic",
        dependencies = "neovim/nvim-lspconfig",
    },
    {
        "X3eRo0/winbar.nvim",
        dependencies = "SmiteshP/nvim-navic",
        config = "require('winbar-config')",
    },
    {
        "vim-utils/vim-man",
    },
    {
        "ej-shafran/compile-mode.nvim",
        branch = "latest",
        -- or a specific version:
        -- tag = "v2.0.0"
        dependencies = {
            { "nvim-lua/plenary.nvim" },
            { "m00qek/baleia.nvim", tag = "v1.3.0" },
        },
        config = "require('compile_mode')",
    },

    -- Colorschemes
 --    {
 --        -- Tokyodark
 --        "tiagovla/tokyodark.nvim",
 --        -- config = "require('colorscheme-config')",
 --    },
 --    {
 --        -- Paper color - slim
 --        "pappasam/papercolor-theme-slim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        "X3eRo0/papercolor-theme",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Tokyonight
 --        "folke/tokyonight.nvim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --
 --    {
 --        -- Material
 --        "marko-cerovac/material.nvim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Catppuccin
 --        "catppuccin/nvim",
 --        as = "catppuccin",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Vscode
 --        "Mofiqul/vscode.nvim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Vim Nightfly
 --        "bluz71/vim-nightfly-guicolors",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Moonfly
 --        "bluz71/vim-moonfly-colors",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Zephyr
 --        "glepnir/zephyr-nvim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Omni
 --        "yonlu/omni.vim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Rose Pine
 --        "rose-pine/neovim",
 --        as = "rose-pine",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        -- Sonokai
 --        "sainnhe/sonokai",
 --        -- config = function()
 --        --     vim.g.sonokai_style = "andromeda"
 --        --     vim.g.sonokai_enable_italic = 0
 --        --     vim.g.sonokai_disable_italic_comment = 0
 --        --     -- vim.cmd("colorscheme sonokai")
 --        -- end,
 --    },
 --    {
 --        -- UwU
 --        "mangeshrex/uwu.vim",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        "projekt0n/github-nvim-theme",
 -- --        config = function()
	-- --     require('colorscheme-config')
	-- -- end,
 --    },
 --    {
 --        "rockerBOO/boo-colorscheme-nvim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
 --        "nyoom-engineering/oxocarbon.nvim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
	-- "ishan9299/modus-theme-vim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
	-- "Th3Whit3Wolf/one-nvim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
	-- "rebelot/kanagawa.nvim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
        "metalelf0/jellybeans-nvim",
        dependencies = "rktjmp/lush.nvim",
        config = function()
	    require('colorscheme-config')
	end,
    }
 --    {
	-- "daltonmenezes/aura-theme",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
 --    {
	-- "dasupradyumna/midnight.nvim",
 --        config = function()
	--     require('colorscheme-config')
	-- end,
 --    },
-- }

opts = {}
require("lazy").setup(plugins, opts)
